{"ast":null,"code":"import _slicedToArray from \"E:/projects/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"E:/projects/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\projects\\\\app\\\\src\\\\shared\\\\components\\\\FormElements\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        value: action.val,\n        isValid: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  _s();\n\n  const _useReducer = useReducer(inputReducer, {\n    value: \"\",\n    isValid: false\n  }),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        inputState = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-control\",\n    children: [element, inputState.isValid]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Input, \"Pk93CYtvcCy84RQChvNVZlS/R68=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["E:/projects/app/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","inputReducer","state","action","type","value","val","isValid","Input","props","inputState","dispatch","changeHandler","event","target","element","id","placeholder","rows"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;;;AAGA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,6CACOF,KADP;AAEIG,QAAAA,KAAK,EAAEF,MAAM,CAACG,GAFlB;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAQJ;AACI,aAAOL,KAAP;AAXR;AAcH,CAfD;;AAkBA,MAAMM,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAAA,sBACUT,UAAU,CAACC,YAAD,EAAe;AACpDI,IAAAA,KAAK,EAAE,EAD6C;AAEpDE,IAAAA,OAAO,EAAE;AAF2C,GAAf,CADpB;AAAA;AAAA,QACdG,UADc;AAAA,QACFC,QADE;;AAKrB,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BF,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAE,QADD;AAELE,MAAAA,GAAG,EAAEO,KAAK,CAACC,MAAN,CAAaT;AAFb,KAAD,CAAR;AAKH,GAND;;AAOA,QAAMU,OAAO,GAAGN,KAAK,CAACM,OAAN,KAAkB,OAAlB,gBACZ;AACI,IAAA,EAAE,EAAEN,KAAK,CAACO,EADd;AAEI,IAAA,IAAI,EAAEP,KAAK,CAACL,IAFhB;AAGI,IAAA,WAAW,EAAEK,KAAK,CAACQ,WAHvB;AAII,IAAA,QAAQ,EAAEL,aAJd;AAKI,IAAA,KAAK,EAAEF,UAAU,CAACL;AALtB;AAAA;AAAA;AAAA;AAAA,UADY,gBAUZ;AACI,IAAA,EAAE,EAAEI,KAAK,CAACO,EADd;AAEI,IAAA,IAAI,EAAEP,KAAK,CAACS,IAAN,IAAc,CAFxB;AAGI,IAAA,QAAQ,EAAEN,aAHd;AAII,IAAA,KAAK,EAAEF,UAAU,CAACL;AAJtB;AAAA;AAAA;AAAA;AAAA,UAVJ;AAkBA,sBACI;AAAK,IAAA,SAAS,gBAAd;AAAA,eACKU,OADL,EAGKL,UAAU,CAACH,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAtCD;;GAAMC,K;;KAAAA,K;AAyCN,eAAeA,KAAf","sourcesContent":["import React, {useReducer} from \"react\";\r\n\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: true\r\n            }\r\n            \r\n            \r\n    \r\n        default:\r\n            return state\r\n            \r\n    }\r\n}\r\n\r\n\r\nconst Input = (props) => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: \"\",\r\n        isValid: false\r\n    })\r\n    const changeHandler = (event) => {\r\n        dispatch({\r\n            type: 'CHANGE',\r\n            val: event.target.value\r\n        })\r\n\r\n    }\r\n    const element = props.element === 'input' ? (\r\n        <input\r\n            id={props.id}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            onChange={changeHandler}\r\n            value={inputState.value}\r\n        \r\n         />\r\n    ) : (\r\n        <textarea\r\n            id={props.id}\r\n            rows={props.rows || 3}\r\n            onChange={changeHandler}\r\n            value={inputState.value}\r\n         />\r\n    )\r\n\r\n    return (\r\n        <div className={`form-control`}>\r\n            {element}\r\n\r\n            {inputState.isValid}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Input;"]},"metadata":{},"sourceType":"module"}